"use client";

import { motion } from "framer-motion";
import { ArrowRight } from "lucide-react";
import Link from "next/link";
import { cn } from "../../lib/utils";
import { Button } from "../ui/button";

export default function Hero() {
  return (
    <motion.section
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.6 }}
      className="pt-20 sm:pt-24 md:pt-32 pb-12 sm:pb-16 md:pb-20 px-4 sm:px-6"
    >
      <div className="container mx-auto max-w-6xl">
        <div className="mx-auto w-fit sm:mx-0 sm:w-auto sm:inline-block sm:text-center px-4 py-1 rounded-full bg-green-100 text-green-600 text-xs sm:text-sm font-medium mb-4 sm:mb-6">
          Receba. Converta. Gerencie.
        </div>
        <div className="flex flex-col lg:flex-row items-center">
          <div className="w-full lg:w-1/2 mb-10 lg:mb-0 lg:pr-8 xl:pr-12">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5 }}
              className="text-center lg:text-left"
            >
              <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-semibold md:leading-15 text-gray-900 mb-4 sm:mb-6">
                Gerencie seus <span className="text-blue-500">Pagamentos Internacionais</span> com Facilidade
              </h1>
              <p className="text-base sm:text-lg md:text-xl text-gray-600 mb-6 sm:mb-8">
                Uma plataforma completa para desenvolvedores acompanharem taxas, impostos e escolherem as melhores opções de pagamento.
              </p>
              <div className="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4 justify-center lg:justify-start">
                <Button asChild size="lg" className="w-full sm:w-auto rounded-full bg-blue-500 hover:bg-blue-600 px-6 sm:px-8">
                  <Link href="/">
                    Comece Agora
                    <ArrowRight className="ml-2 h-4 w-4 sm:h-5 sm:w-5" />
                  </Link>
                </Button>
                <Button asChild variant="outline" size="lg" className="w-full sm:w-auto rounded-full border-gray-200">
                  <Link href="/">Saiba Mais</Link>
                </Button>
              </div>
            </motion.div>
          </div>

          <div className="w-full lg:w-1/2 px-4 sm:px-8 lg:px-0">
            <motion.div
              initial={{ opacity: 0, scale: 0.95 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.5, delay: 0.2 }}
              className="relative rounded-2xl overflow-hidden shadow-xl"
            >

              {/* GENERATED BY IA */}
              <div className="aspect-[4/3] bg-gradient-to-br from-blue-600 to-green-700 rounded-2xl overflow-hidden relative">
                <div className="absolute inset-0 opacity-20 bg-[radial-gradient(circle_at_50%_120%,white,transparent_70%)]"></div>

                {/* Finance-themed grid elements - 6 blocks on mobile, 9 on larger screens */}
                <div className="absolute inset-0 grid grid-cols-2 sm:grid-cols-3 grid-rows-3 gap-2 sm:gap-4 p-3 sm:p-6">
                  {Array(9).fill(0).map((_, i) => {
                    // Enhanced financial dashboard elements
                    const isBarChart = i === 1;
                    const isLineChart = i === 5;
                    const isMetric = i === 0 || i === 3;
                    const isCurrencyCard = i === 4;
                    const isPercentage = i === 6;
                    const isAreaChart = i === 2;
                    const isPieChart = i === 7;
                    const isDataTable = i === 8;

                    // Hide elements 7, 8 on mobile (show only first 6)
                    const hiddenOnMobile = i >= 6;

                    return (
                      <motion.div
                        key={i}
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        transition={{ duration: 0.3, delay: 0.3 + (i * 0.1) }}
                        className={cn(
                          "glass rounded-lg sm:rounded-xl flex flex-col overflow-hidden backdrop-blur-sm",
                          hiddenOnMobile ? "hidden sm:flex" : "flex",
                          isCurrencyCard ? "col-span-1 row-span-1 bg-white/40 border border-white/30 shadow-lg" :
                          isBarChart ? "bg-white/20 border-l-4 border-green-400 shadow-md" :
                          isLineChart ? "bg-white/20 border-l-4 border-blue-300 shadow-md" :
                          isMetric ? "bg-white/15 border-b border-white/30 shadow-md" :
                          isPercentage ? "bg-white/15 border-b border-green-400/70 shadow-md" :
                          "bg-white/10 shadow-md"
                        )}
                      >
                        {isMetric && (
                          <div className="w-full h-full p-2 flex flex-col justify-center">
                            <div className="text-white/80 text-[8px] sm:text-xs mb-1 font-medium">
                              {i === 0 ? "RECEITA TOTAL" : "RECEITA MENSAL"}
                            </div>
                            <div className="text-white font-bold text-sm sm:text-base">
                              {i === 0 ? "R$ 84.500,00" : "R$ 12.350,00"}
                            </div>
                            <div className="text-green-300 text-[8px] sm:text-xs flex items-center font-medium">
                              {i === 0 ? "+30,5%" : "+15,8%"} <span className="ml-1">↑</span>
                            </div>
                          </div>
                        )}

                        {isPercentage && (
                          <div className="w-full h-full p-2 flex flex-col justify-center">
                            <div className="text-white/80 text-[8px] sm:text-xs mb-1 font-medium">CONVERSÃO</div>
                            <div className="text-white font-bold text-sm sm:text-base">87,3%</div>
                            <div className="text-green-300 text-[8px] sm:text-xs flex items-center font-medium">+5,2% <span className="ml-1">↑</span></div>
                          </div>
                        )}

                        {isCurrencyCard && (
                          <div className="w-full h-full p-2 flex flex-col justify-center">
                            <div className="text-white/80 text-[8px] sm:text-xs font-medium">CÂMBIO</div>
                            <div className="text-white font-bold text-sm sm:text-lg flex items-center">
                              <span className="text-green-300 mr-1">R$</span>1,00 = <span className="text-green-300 ml-1">$</span>0,20
                            </div>
                          </div>
                        )}

                        {isBarChart && (
                          <div className="w-full h-full p-1 sm:p-2">
                            <div className="text-white/80 text-[8px] mb-1 font-medium">RECEITA MENSAL</div>
                            <div className="w-full h-3/4 flex items-end space-x-[2px] sm:space-x-1">
                              {[4, 6, 5, 7, 9, 8, 10].map((h, idx) => (
                                <div key={idx} className="flex flex-col items-center flex-1">
                                  <div
                                    className="w-full bg-gradient-to-t from-green-500 to-green-300 rounded-t-sm"
                                    style={{ height: `${h * 8}%` }}
                                  ></div>
                                  <div className="text-white/80 text-[6px] mt-1">{idx+1}</div>
                                </div>
                              ))}
                            </div>
                          </div>
                        )}

                        {isLineChart && (
                          <div className="w-full h-full p-1 sm:p-2">
                            <div className="text-white/80 text-[8px] mb-1 font-medium">DESEMPENHO</div>
                            <div className="w-full h-3/4 flex items-center">
                              <svg viewBox="0 0 100 30" className="w-full h-full">
                                <defs>
                                  <linearGradient id="lineGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                    <stop offset="0%" stopColor="rgba(74, 222, 128, 0.8)" />
                                    <stop offset="100%" stopColor="rgba(74, 222, 128, 0)" />
                                  </linearGradient>
                                </defs>
                                <path
                                  d="M0,20 Q10,15 20,10 T40,5 T60,15 T80,10 T100,5"
                                  fill="none"
                                  stroke="#4ADE80"
                                  strokeWidth="2"
                                />
                                <circle cx="20" cy="10" r="2" fill="white" />
                                <circle cx="60" cy="15" r="2" fill="white" />
                                <circle cx="100" cy="5" r="2" fill="white" />
                              </svg>
                            </div>
                          </div>
                        )}

                        {isAreaChart && (
                          <div className="w-full h-full p-1 sm:p-2">
                            <div className="text-white/80 text-[8px] mb-1 font-medium">CRESCIMENTO</div>
                            <div className="w-full h-3/4 flex items-center">
                              <svg viewBox="0 0 100 30" className="w-full h-full">
                                <defs>
                                  <linearGradient id="areaGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                    <stop offset="0%" stopColor="rgba(96, 165, 250, 0.7)" />
                                    <stop offset="100%" stopColor="rgba(96, 165, 250, 0)" />
                                  </linearGradient>
                                </defs>
                                <path
                                  d="M0,25 Q20,20 40,15 T70,10 T100,5 V30 H0 Z"
                                  fill="url(#areaGradient)"
                                  stroke="none"
                                />
                                <path
                                  d="M0,25 Q20,20 40,15 T70,10 T100,5"
                                  fill="none"
                                  stroke="#60A5FA"
                                  strokeWidth="1.5"
                                />
                              </svg>
                            </div>
                          </div>
                        )}

                        {isPieChart && (
                          <div className="w-full h-full p-1 sm:p-2 flex flex-col">
                            <div className="text-white/80 text-[8px] mb-1 font-medium">DISTRIBUIÇÃO</div>
                            <div className="flex-1 flex items-center justify-center">
                              <svg viewBox="0 0 36 36" className="w-3/4 h-3/4">
                                <circle cx="18" cy="18" r="16" fill="none" stroke="#94A3B8" strokeWidth="4" strokeDasharray="100" strokeDashoffset="0"></circle>
                                <circle cx="18" cy="18" r="16" fill="none" stroke="#60A5FA" strokeWidth="4" strokeDasharray="100" strokeDashoffset="75" transform="rotate(-90 18 18)"></circle>
                                <circle cx="18" cy="18" r="16" fill="none" stroke="#4ADE80" strokeWidth="4" strokeDasharray="100" strokeDashoffset="50" transform="rotate(-90 18 18)"></circle>
                              </svg>
                            </div>
                          </div>
                        )}

                        {isDataTable && (
                          <div className="w-full h-full p-1 sm:p-2">
                            <div className="text-white/80 text-[8px] mb-1 font-medium">TRANSAÇÕES</div>
                            <div className="w-full flex flex-col space-y-1">
                              {[1, 2, 3].map((_, idx) => (
                                <div key={idx} className="flex justify-between items-center">
                                  <div className="w-2 h-2 rounded-full bg-blue-300"></div>
                                  <div className="flex-1 mx-1 h-[2px] bg-white/20"></div>
                                  <div className="text-white/90 text-[6px] font-medium">R$ 6,2k</div>
                                </div>
                              ))}
                            </div>
                          </div>
                        )}
                      </motion.div>
                    );
                  })}
                  {/* END GENERATED BY IA */}
                </div>
              </div>
            </motion.div>
          </div>
        </div>
      </div>
    </motion.section>
  )
}